target:
  type: rockset
  api_key: 
  workspace: "dbt_test_{{ var('_dbt_random_suffix') }}"
projects:
  - name: base
    paths:
      data/base.csv: files.seeds.base
      models/view_model.sql: files.models.base_view
      models/table_model.sql: files.models.base_table
      models/swappable.sql: files.models.base_materialized_var
      models/schema.yml: files.schemas.base
    dbt_project_yml:
      models:
        dbt_test_project:
    facts:
      seed:
        length: 1
        names:
          - base
      run:
        length: 3
        names:
          - view_model
          - table_model
          - swappable
      catalog:
        nodes:
          length: 4
        sources:
          length: 1
      persisted_relations:
        - base
        - view_model
        - table_model
        - swappable
      base:
        rowcount: 10
      expected_types_view:
        base: table
        view_model: view
        table_model: table
        swappable: view
      expected_types_table:
        base: table
        view_model: view
        table_model: table
        swappable: table
  - name: ephemeral
    paths:
      data/base.csv: files.seeds.base
      models/ephemeral.sql: files.models.ephemeral
      models/view_model.sql: files.models.ephemeral_view
      models/table_model.sql: files.models.ephemeral_table
      models/schema.yml: files.schemas.base
    facts:
      seed:
        length: 1
        names:
          - base
      run:
        length: 2
        names:
          - view_model
          - table_model
      catalog:
        nodes:
          length: 3
        sources:
          length: 1
      persisted_relations:
        - base
        - view_model
        - table_model
      base:
        rowcount: 10

sequences:
  ## These three standard, built-in tests pass with no problem
  #test_dbt_empty: empty
  #test_dbt_data_test: data_test
  #test_dbt_schema_test: schema_test

  ## These next two tests come from the builtin base and ephemeral tests respectively,
  ## but we've put them inline here **without the catalog step**, because our dbt docs
  ## command does not implement all features.
  #base_without_catalog:
  #  project: base
  #  sequence:
  #    - type: dbt
  #      cmd: seed
  #    - type: run_results
  #      length: fact.seed.length
  #    - type: dbt
  #      cmd: run
  #    - type: run_results
  #      length: fact.run.length
  #    - type: relation_types
  #      expect: fact.expected_types_table
  #    - type: relation_rows
  #      name: base
  #      length: fact.base.rowcount
  #    - type: relations_equal
  #      relations: fact.persisted_relations
  #    - type: dbt
  #      cmd: docs generate
  #    - type: catalog
  #      exists: True
  #    # now swap
  #    - type: dbt
  #      cmd: run -m swappable
  #      vars:
  #        materialized_var: view
  #    - type: run_results
  #      length: 1
  #    - type: relation_types
  #      expect: fact.expected_types_view
  #    # now incremental
  #    - type: dbt
  #      cmd: run -m swappable
  #      vars:
  #        materialized_var: incremental
  #    - type: run_results
  #      length: 1
  #    - type: relation_types
  #      expect: fact.expected_types_table
  #ephemeral_without_catalog:
  #  project: ephemeral
  #  sequence:
  #    - type: dbt
  #      cmd: seed
  #    - type: run_results
  #      length: fact.seed.length
  #    - type: dbt
  #      cmd: run
  #    - type: run_results
  #      length: fact.run.length
  #    - type: relation_rows
  #      name: base
  #      length: fact.base.rowcount
  #    - type: relations_equal
  #      relations: fact.persisted_relations
  #    - type: dbt
  #      cmd: docs generate
  #    - type: catalog
  #      exists: True

  ## This test fails with row count differences of some kind. May be due to the _id field, which is expected
  test_dbt_incremental: incremental
  
